import type { ColorShade } from "./color";

// prettier-ignore
export const shader = (type: ColorShade, color: { [T in ColorShade]: number; }): number => {
  switch (type) {
    case "50": return color[50]; break;
    case "100": return color[100]; break;
    case "200": return color[200]; break;
    case "300": return color[300]; break;
    case "400": return color[400]; break;
    case "500": return color[500]; break;
    case "600": return color[600]; break;
    case "700": return color[700]; break;
    case "800": return color[800]; break;
    case "900": return color[900]; break;
    case "950": return color[950]; break;
  }
};

export const gamutLightness = (type: ColorShade, hue: number) => {
  const orange = 21.176470588235;
  const amber = 42.35294117647;
  const yellow = 63.529411764704996;
  const lime = 84.70588235294;
  const green = 105.88235294117499;
  const emerald = 127.05882352940998;
  const teal = 148.23529411764497;
  const cyan = 169.41176470587996;
  const sky = 190.58823529411495;
  const blue = 211.76470588234994;
  const indigo = 232.94117647058494;
  const violet = 254.11764705881993;
  const purple = 275.2941176470549;
  const fuchsia = 296.47058823528994;
  const pink = 317.64705882352496;
  const rose = 338.82352941176;

  if (hue < orange) {
    return shader(type, {
      50: 0.971,
      100: 0.936,
      200: 0.885,
      300: 0.808,
      400: 0.704,
      500: 0.637,
      600: 0.577,
      700: 0.505,
      800: 0.444,
      900: 0.396,
      950: 0.258,
    });
  } else if (hue > orange && hue < amber) {
    return shader(type, {
      50: 0.98,
      100: 0.954,
      200: 0.901,
      300: 0.837,
      400: 0.75,
      500: 0.705,
      600: 0.646,
      700: 0.553,
      800: 0.47,
      900: 0.408,
      950: 0.266,
    });
  } else if (hue > amber && hue < yellow) {
    return shader(type, {
      50: 0.987,
      100: 0.962,
      200: 0.924,
      300: 0.879,
      400: 0.828,
      500: 0.769,
      600: 0.666,
      700: 0.555,
      800: 0.473,
      900: 0.414,
      950: 0.279,
    });
  } else if (hue > yellow && hue < lime) {
    return shader(type, {
      50: 0.987,
      100: 0.973,
      200: 0.945,
      300: 0.905,
      400: 0.852,
      500: 0.795,
      600: 0.681,
      700: 0.554,
      800: 0.476,
      900: 0.421,
      950: 0.286,
    });
  } else if (hue > lime && hue < green) {
    return shader(type, {
      50: 0.986,
      100: 0.967,
      200: 0.938,
      300: 0.897,
      400: 0.841,
      500: 0.768,
      600: 0.648,
      700: 0.532,
      800: 0.453,
      900: 0.405,
      950: 0.274,
    });
  } else if (hue > green && hue < emerald) {
    return shader(type, {
      50: 0.982,
      100: 0.962,
      200: 0.925,
      300: 0.871,
      400: 0.792,
      500: 0.723,
      600: 0.627,
      700: 0.527,
      800: 0.448,
      900: 0.393,
      950: 0.266,
    });
  } else if (hue > emerald && hue < teal) {
    return shader(type, {
      50: 0.979,
      100: 0.95,
      200: 0.905,
      300: 0.845,
      400: 0.765,
      500: 0.696,
      600: 0.596,
      700: 0.508,
      800: 0.432,
      900: 0.378,
      950: 0.262,
    });
  } else if (hue > teal && hue < cyan) {
    return shader(type, {
      50: 0.984,
      100: 0.953,
      200: 0.91,
      300: 0.855,
      400: 0.777,
      500: 0.704,
      600: 0.6,
      700: 0.511,
      800: 0.437,
      900: 0.386,
      950: 0.277,
    });
  } else if (hue > cyan && hue < sky) {
    return shader(type, {
      50: 0.984,
      100: 0.956,
      200: 0.917,
      300: 0.865,
      400: 0.789,
      500: 0.715,
      600: 0.609,
      700: 0.52,
      800: 0.45,
      900: 0.398,
      950: 0.302,
    });
  } else if (hue > sky && hue < blue) {
    return shader(type, {
      50: 0.977,
      100: 0.951,
      200: 0.901,
      300: 0.828,
      400: 0.746,
      500: 0.685,
      600: 0.588,
      700: 0.5,
      800: 0.443,
      900: 0.391,
      950: 0.293,
    });
  } else if (hue > blue && hue < indigo) {
    return shader(type, {
      50: 0.97,
      100: 0.932,
      200: 0.882,
      300: 0.809,
      400: 0.707,
      500: 0.623,
      600: 0.546,
      700: 0.488,
      800: 0.424,
      900: 0.379,
      950: 0.282,
    });
  } else if (hue > indigo && hue < violet) {
    return shader(type, {
      50: 0.962,
      100: 0.93,
      200: 0.87,
      300: 0.785,
      400: 0.673,
      500: 0.585,
      600: 0.511,
      700: 0.457,
      800: 0.398,
      900: 0.359,
      950: 0.257,
    });
  } else if (hue > violet && hue < purple) {
    return shader(type, {
      50: 0.969,
      100: 0.943,
      200: 0.894,
      300: 0.811,
      400: 0.702,
      500: 0.606,
      600: 0.541,
      700: 0.491,
      800: 0.432,
      900: 0.38,
      950: 0.283,
    });
  } else if (hue > purple && hue < fuchsia) {
    return shader(type, {
      50: 0.977,
      100: 0.946,
      200: 0.902,
      300: 0.827,
      400: 0.714,
      500: 0.627,
      600: 0.558,
      700: 0.496,
      800: 0.438,
      900: 0.381,
      950: 0.291,
    });
  } else if (hue > fuchsia && hue < pink) {
    return shader(type, {
      50: 0.977,
      100: 0.952,
      200: 0.903,
      300: 0.833,
      400: 0.74,
      500: 0.667,
      600: 0.591,
      700: 0.518,
      800: 0.452,
      900: 0.401,
      950: 0.293,
    });
  } else if (hue > pink && hue < rose) {
    return shader(type, {
      50: 0.971,
      100: 0.948,
      200: 0.899,
      300: 0.823,
      400: 0.718,
      500: 0.656,
      600: 0.592,
      700: 0.525,
      800: 0.459,
      900: 0.408,
      950: 0.284,
    });
  } else if (hue > rose) {
    return shader(type, {
      50: 0.969,
      100: 0.941,
      200: 0.892,
      300: 0.81,
      400: 0.712,
      500: 0.645,
      600: 0.586,
      700: 0.514,
      800: 0.455,
      900: 0.41,
      950: 0.271,
    });
  } else {
    return 0;
  }
};

export const gamutChroma = (type: ColorShade, hue: number) => {
  const orange = 21.176470588235;
  const amber = 42.35294117647;
  const yellow = 63.529411764704996;
  const lime = 84.70588235294;
  const green = 105.88235294117499;
  const emerald = 127.05882352940998;
  const teal = 148.23529411764497;
  const cyan = 169.41176470587996;
  const sky = 190.58823529411495;
  const blue = 211.76470588234994;
  const indigo = 232.94117647058494;
  const violet = 254.11764705881993;
  const purple = 275.2941176470549;
  const fuchsia = 296.47058823528994;
  const pink = 317.64705882352496;
  const rose = 338.82352941176;

  if (hue < orange) {
    return shader(type, {
      50: 0.013,
      100: 0.032,
      200: 0.062,
      300: 0.114,
      400: 0.191,
      500: 0.237,
      600: 0.245,
      700: 0.213,
      800: 0.177,
      900: 0.141,
      950: 0.092,
    });
  } else if (hue > orange && hue < amber) {
    return shader(type, {
      50: 0.016,
      100: 0.038,
      200: 0.076,
      300: 0.128,
      400: 0.183,
      500: 0.213,
      600: 0.222,
      700: 0.195,
      800: 0.157,
      900: 0.123,
      950: 0.079,
    });
  } else if (hue > amber && hue < yellow) {
    return shader(type, {
      50: 0.022,
      100: 0.059,
      200: 0.12,
      300: 0.169,
      400: 0.189,
      500: 0.188,
      600: 0.179,
      700: 0.163,
      800: 0.137,
      900: 0.112,
      950: 0.077,
    });
  } else if (hue > yellow && hue < lime) {
    return shader(type, {
      50: 0.026,
      100: 0.071,
      200: 0.129,
      300: 0.182,
      400: 0.199,
      500: 0.184,
      600: 0.162,
      700: 0.135,
      800: 0.114,
      900: 0.095,
      950: 0.066,
    });
  } else if (hue > lime && hue < green) {
    return shader(type, {
      50: 0.031,
      100: 0.067,
      200: 0.127,
      300: 0.196,
      400: 0.238,
      500: 0.233,
      600: 0.2,
      700: 0.157,
      800: 0.124,
      900: 0.101,
      950: 0.072,
    });
  } else if (hue > green && hue < emerald) {
    return shader(type, {
      50: 0.018,
      100: 0.044,
      200: 0.084,
      300: 0.15,
      400: 0.209,
      500: 0.219,
      600: 0.194,
      700: 0.154,
      800: 0.119,
      900: 0.095,
      950: 0.065,
    });
  } else if (hue > emerald && hue < teal) {
    return shader(type, {
      50: 0.021,
      100: 0.052,
      200: 0.093,
      300: 0.143,
      400: 0.177,
      500: 0.17,
      600: 0.145,
      700: 0.118,
      800: 0.095,
      900: 0.077,
      950: 0.051,
    });
  } else if (hue > teal && hue < cyan) {
    return shader(type, {
      50: 0.014,
      100: 0.051,
      200: 0.096,
      300: 0.138,
      400: 0.152,
      500: 0.14,
      600: 0.118,
      700: 0.096,
      800: 0.078,
      900: 0.063,
      950: 0.046,
    });
  } else if (hue > cyan && hue < sky) {
    return shader(type, {
      50: 0.019,
      100: 0.045,
      200: 0.08,
      300: 0.127,
      400: 0.154,
      500: 0.143,
      600: 0.126,
      700: 0.105,
      800: 0.085,
      900: 0.07,
      950: 0.056,
    });
  } else if (hue > sky && hue < blue) {
    return shader(type, {
      50: 0.013,
      100: 0.026,
      200: 0.058,
      300: 0.111,
      400: 0.16,
      500: 0.169,
      600: 0.158,
      700: 0.134,
      800: 0.11,
      900: 0.09,
      950: 0.066,
    });
  } else if (hue > blue && hue < indigo) {
    return shader(type, {
      50: 0.014,
      100: 0.032,
      200: 0.059,
      300: 0.105,
      400: 0.165,
      500: 0.214,
      600: 0.245,
      700: 0.243,
      800: 0.199,
      900: 0.146,
      950: 0.091,
    });
  } else if (hue > indigo && hue < violet) {
    return shader(type, {
      50: 0.018,
      100: 0.034,
      200: 0.065,
      300: 0.115,
      400: 0.182,
      500: 0.233,
      600: 0.262,
      700: 0.24,
      800: 0.195,
      900: 0.144,
      950: 0.09,
    });
  } else if (hue > violet && hue < purple) {
    return shader(type, {
      50: 0.016,
      100: 0.029,
      200: 0.057,
      300: 0.111,
      400: 0.183,
      500: 0.25,
      600: 0.281,
      700: 0.27,
      800: 0.232,
      900: 0.189,
      950: 0.141,
    });
  } else if (hue > purple && hue < fuchsia) {
    return shader(type, {
      50: 0.014,
      100: 0.033,
      200: 0.063,
      300: 0.119,
      400: 0.203,
      500: 0.265,
      600: 0.288,
      700: 0.265,
      800: 0.218,
      900: 0.176,
      950: 0.149,
    });
  } else if (hue > fuchsia && hue < pink) {
    return shader(type, {
      50: 0.017,
      100: 0.037,
      200: 0.076,
      300: 0.145,
      400: 0.238,
      500: 0.295,
      600: 0.293,
      700: 0.253,
      800: 0.211,
      900: 0.17,
      950: 0.136,
    });
  } else if (hue > pink && hue < rose) {
    return shader(type, {
      50: 0.014,
      100: 0.028,
      200: 0.061,
      300: 0.12,
      400: 0.202,
      500: 0.241,
      600: 0.249,
      700: 0.223,
      800: 0.187,
      900: 0.153,
      950: 0.109,
    });
  } else if (hue > rose) {
    return shader(type, {
      50: 0.015,
      100: 0.03,
      200: 0.058,
      300: 0.117,
      400: 0.194,
      500: 0.246,
      600: 0.253,
      700: 0.222,
      800: 0.188,
      900: 0.159,
      950: 0.105,
    });
  } else {
    return 0;
  }
};
